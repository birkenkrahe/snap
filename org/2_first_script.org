#+title: Snap! Scripting
#+subtitle: COR100 Snap! Programming Fall 2022
#+options: toc:nil num:nil ^:nil
#+startup: overview hideblocks indent inlineimages
  #+attr_html: :width 600px
  [[../img/snap_FirstProjectSolution.png]]

* Building a script
  
- To build a *script*, you drag and drop the blocks from the commands
  area into the script area and *connect* them like a jigsaw puzzle.

- Scripts are *programs*, sets of instructions for the computer.

- Programs need to be absolutely *flawless*: you need to be 100%
  diligent and careful when programming. Otherwise, the computer will
  refuse to cooperate.

* Saving a Snap! project

- A Snap! /project/ is a collection of scripts for sprites.
  #+attr_html: :width 500px
  #+caption: Snap! project example
  [[../img/snap_project.png]]

- You can save your projects in your cloud account (if you are using
  the cloud version of Snap!), or you can save it locally as an XML
  file[fn:1].
  #+attr_html: :width 500px
  #+caption: Snap! project example
  [[../img/snap_xml.png]]

* Sprites and costumes

- When you add a new sprite, it always comes up as a "Turtle", a
  triangular shape.

- Every new Turtle sprite appears at a random place on the screen,
  facing a random direction, and has a random color.
  #+attr_html: :width 600px
  #+caption: Snap! sprites.
  [[../img/snap_turtles.png]]

- You can also use your camera to create a sprite.
  #+attr_html: :width 600px
  #+caption: Snap! sprite, created with camera
  [[../img/snap_camera.png]]

- To change the appearance of the standard Turtle sprite, load a new
  costume. There are readymade costumes provided.
  #+attr_html: :width 600px
  #+caption: Snap! costume from the media library
  [[../img/snap_costumes.png]]

- This is where the costumes library resides on my computer at home
  (because I downloaded the Snap! source code):
  ~/home/pi/Snap-7.3.1/Costumes~[fn:2].
  #+attr_html: :width 600px
  #+caption: Snap! top menu
  [[../img/snap_library.png]]

- You can also create or modify an existing costume using the paint
  editor.
  #+attr_html: :width 600px
  #+caption: Self-drawn Snap! costume
  [[../img/snap_paint.png]]

- To import an image or go to the Costumes library, open the top (or
  "file") menu next to the Snap! logo, marked by a document symbol.
  #+attr_html: :width 600px
  #+caption: Snap! top menu
  [[../img/snap_menu.png]]

* Stage or background

- Similar to the costume library, Snap! comes with backgrounds that
  you can load for your stage.
  #+attr_html: :width 600px
  #+caption: Snap! standard background ~woods.gif~
  [[../img/snap_background.png]]

- You can also modify or import backgrounds from your computer.
  #+attr_html: :width 600px
  #+caption: Snap! standard background ~woods.gif~
  [[../img/snap_tuscany.png]]

* Command blocks and scripts

- Scripts control the action of sprites (characters)

- Scripts are created by dragging command blocks into the
  script area and snapping them together

- You can run any command block (aka /programming statement/) by
  clicking on it. [[https://drive.google.com/file/d/1MKy5Biyshsd9kgh_bsxtWUISclaPtIaX/view?usp=sharing][This Gif shows that]] for ~"turn 90 degrees"~.
  #+attr_html: :width 200px
  #+caption: Snap! motion command to turn sprite clockwise by 90 degrees
  [[../img/snap_turn90.png]]

  #+attr_html: :width 200px
  #+caption: GIF screenshot
  [[../img/snap_turn.gif]]

- When a script is running, the command blocks used are
  glowing. Clicking on a running script again will stop it.
  #+attr_html: :width 200px
  #+caption: Snap! motion command that runs forever
  [[../img/snap_forever1.png]]
* *Practice* - first script

1) Register an account with ~snap.berkeley.edu~. Use your Lyon College
   email address and FirstnameLastname as Username,
   e.g. MarcusBirkenkrahe.
   #+attr_html: :width 500px
   #+caption: snap.berkeley.edu profile page
   [[../img/snap_registration.png]]

2) Create a new named project:
   - Open the main menu at the top
   - Click on ~New~ (a new project page opens)
   - Click on ~Save As ...~ and enter the name ~FirstProject~
   - Save the project on your computer.
   - Open the file location to see where ~FirstProject.xml~ was saved
   #+attr_html: :width 500px
   #+caption: FirstProject in the Snap! desktop app
   [[../img/snap_FirstProject.png]]

3) Create a new sprite and stage:
   - Add a new /Turtle/ sprite
   - Open the /Costumes/ menu from the main menu (at the top)
   - Click on the sprite icon and pick an animal or human /costume/ for
     the /sprite/ using the Costumes library
   - Click on the /stage/ icon and pick a background for the /stage/ using
     the Backgrounds library
   - Save your project to the cloud using ~Save As ...~ and then
     choosing the location ~Cloud~ instead of ~Computer~
   - Go to ~My Projects~ on the Snap! website and find your project
   #+attr_html: :width 500px
   #+caption: New sprite with new background.
   [[../img/snap_puppy.png]]

4) Create a simple script with a standard Turtle:
   - Go back to the /Scripts/ tab. If the ~Motion~ command palette is
     greyed out, then your chosen sprite costume cannot be moved and
     you need to pick another.
   - Make your sprite ~point towards center~ of the stage
   - Make your sprite ~move 200 steps~
   - Make your sprite ~go to a random position~
   - Make sure that all your statements/commands are attached to one
     another in the prescribed order

5) Run script:
   - Run the script a few times by clicking on any of the statements
     in the script
   - Go to the ~Control~ command palette
   - Make your sprite ~wait 1 secs~ between moving and going to a random
     position
   - Run the altered script a few times to make sure it does what it
     should
   - Execute the script ~forever~ by including it in a ~forever~ loop
   - Stop the program by clicking on the script, or by clicking on the
     red STOP symbol at the top above the stage
   - When running, the final result should look like shown [[https://youtu.be/Q2jmy1OEFsY][in this
     video]] (with your choice of sprite and background, of course)
   - Save your project to the cloud location (with ~Save As ...~)

6) Share your project and upload the location
   - Go to your projects and share the project using the ~Share~ button.
   - You can now publish the project, which means that it will be
     visible (and searchable) in the Snap! website
   - On the project page, you can ~Unshare~ and ~Unpublish~ your project.
     #+attr_html: :width 600px
     #+caption: You can share/unshare, and publish/unpublish projects
     [[../img/snap_share.png]]

   - On the ~My Projects~ page, you also see if a project is shared
     and/or published.
     #+attr_html: :width 600px
     #+caption: My "My Projects" page
     [[../img/snap_projects.png]]

   - You can add projects to collections.
     #+attr_html: :width 600px
     #+caption: My collection of projects for this course
     [[../img/snap_collection.png]]

   - Published projects and collections are displayed on your public
     page.
     #+attr_html: :width 600px
     #+caption: My collection of projects for this course
     [[../img/snap_public.png]]
* Practice solution - first script

- Screenshot:
  #+attr_html: :width 600px
  [[../img/snap_FirstProjectSolution.png]]

- [[https://youtu.be/Q2jmy1OEFsY][YouTube video]]
- [[https://drive.google.com/file/d/1ChUnHeeH029J_KDOLFcS8b3ie_RtRiIL/view?usp=sharing][GDrive video]]
- [[https://snap.berkeley.edu/project?user=birkenkrahe&project=FirstProject][Project URL]]

* Footnotes

[fn:1]XML, or eXtensible Markup Language is a layout language that
looks a lot like HTML, but instead of web page display its focus is on
wrapping layout information in text-based, tagged files.

[fn:2]This is a file address: the computer needs to keep track of all
its files. To do this, it uses a hierarchy, like a tree turned upside
down, with the /root/ at the top. This particular address,
~/home/pi/Snap-7.3.1/Costumes~ means that the costumes files are located
in a directory ~/Snap-7.3.1~ (which contains all files for the Snap!
version 7.3.1), which is contained in a directory ~/pi~ (that's my
username on this computer), which is contained in the directory ~/home~
right below the root directory ~/~.
