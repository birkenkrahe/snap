#+title: Snap! Mouse interaction, push-buttons on stage
#+subtitle: COR100 Snap! Programming Fall 2022
#+options: toc:nil num:nil ^:nil
#+startup: overview hideblocks indent inlineimages
* UNIT 3: GAME DESIGN
#+attr_html: :width 600px
[[../img/s_unit3.jpg]]

- [ ] User interaction using mouse pointer
- [ ] Conditionals (Wait until)
- [ ] Numeric variables (numbers)
- [ ] Variables as sliders
- [ ] Keyboard events (polling)
- [ ] User input with buttons

** Mouse interaction
#+attr_html: :width 400px
[[../img/s8_mouse.jpg]]

** Mouse events for sprite and stage

1) Clicked mouse
2) Pressed mouse
3) Dropped sprite/stage with mouse
4) Entered sprite/stage with mouse
5) Departed sprite/stage with mouse

Examples:
- create a new project,
- import the ~reset~ script
- write the first script,
- duplicate and alter accordingly.
- Switch ~mouse x~ and ~mouse y~ buttons on (~Sensing~)
- Remember to ~clean up~ once you're done
- Remember to write a short note on the purpose of this project,
  e.g. "~Testing mouse interaction~"

- Clicked mouse:
  [[../img/s8_clicking.png]]

- Pressed mouse:
  [[../img/s8_pressed.png]]

- Dropped sprite/stage with mouse:
  [[../img/s8_dropped.png]]

- Entered sprite/stage with mouse:
  [[../img/s8_entered.png]]

- Departed sprite/stage with mouse:
  [[../img/s8_departed.png]]

- Test each script with a sprite and then with a stage

** Make mouse follow the pointer

- You can make a sprite follow the mouse pointer using the script
  below

- Create a new sprite for this script
  [[../img/s8_follow.png]]

** Cat-and-mouse

Use this same idea to make one sprite follow another:
1) create a new sprite ~hunter~ and another sprite ~prey~
2) add costumes ~cat~ and ~mouse~
3) write the code and test the script
4) ways to refine script:
   - make ~cat~ sneak up on ~mouse~
   - make ~cat~ eat ~mouse~
   - make ~mouse~ eat ~cat~

[[https://snap.berkeley.edu/project?username=birkenkrahe&projectname=mouse_interaction][See: sample solution]]

** Use push-buttons on the stage

- Click or push-buttons have a specific shape and a label
  #+attr_html: :width 200px
  [[../img/s8_buttons.jpg]]

- Make a new project to implement a click-button:
  1) Get a button sprite (no built-in buttons)
  2) Use the ~When sprite clicked~ event to activate button
  3) Send ~broadcast~ message to sprite carrying out an action

- Interesting actions include ~Pen~ art (make a drawing)

** TODO Numeric variables
** TODO Change variable values
** TODO Switch on variable slider
